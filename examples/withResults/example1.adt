adt Nat
sorts Nat
ops
    Zero: -> Nat
    succ: Nat -> Nat
    add: Nat x Nat -> Nat
    sub: Nat x Nat -> Nat
axs
    add(Zero, x) = x
    add(succ(z), x) = succ(add(z, x))
    sub(Zero, x) = Zero
    sub(x, Zero) = x
    sub(succ(x), succ(y)) = sub(x, y)
end

adt Vector3i
sorts Vector3i, Nat
ops
    vec3: Nat x Nat x Nat -> Vector3i
    addVector: Vector3i x Vector3i -> Vector3i
    subVector: Vector3i x Vector3i -> Vector3i
axs
    addVector(vec3(x1, y1, z1), vec3(x2, y2, z2)) = vec3(add(x1, x2), add(y1, y2), add(z1, z2))
    subVector(vec3(x1, y1, z1), vec3(x2, y2, z2)) = vec3(sub(x1, x2), sub(y1, y2), sub(z1, z2))
end

subVector(vec3(succ(Zero), succ(succ(Zero)), succ(Zero)), vec3(Zero, succ(Zero), Zero))
addVector(vec3(succ(Zero), Zero, succ(Zero)), vec3(succ(Zero), succ(succ(Zero)), succ(Zero)))